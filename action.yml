name: 'AWS Deployment'
description: 'Deploy changes to AWS'
inputs:
  aws-instance-id:
    required: true
    description: 'AWS Instance ID'
  s3-bucket:
    required: true
    description: 'S3 Bucket'
  working-directory:
    required: true
    description: 'Working directory'
  server-base-path:
    required: true
    description: 'Server base path'
  aws-access-key-id:
    required: true
    description: 'AWS Access Key ID'
  aws-secret-access-key:
    required: true
    description: 'AWS Secret Access Key'
  aws-default-region:
    required: true
    description: 'AWS Default Region'
  backup-path:
    required: true
    description: 'Backup path'
  username:
    required: true
    description: 'Username'
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-default-region }}

    - name: Send SSM command - backup
      id: ssm-backup
      run: |
        COMMAND_ID=$(aws ssm send-command --instance-ids "${{ inputs.aws-instance-id }}" --document-name "AWS-RunShellScript" --parameters commands=["sudo mkdir -p ${{ inputs.backup-path }}; sudo -u ${{ inputs.username }} tar -cf ${{ inputs.backup-path }}/$(basename ${{ inputs.working-directory }})-$(date +%Y-%m-%d_%H%M%S).tar ${{ inputs.server-base-path }}/${{ inputs.working-directory }}"] --query 'Command.CommandId' --output text)
        echo "COMMAND_ID=$COMMAND_ID" >> $GITHUB_ENV
        bash ./wait-for-ssm-command.sh $COMMAND_ID
      shell: bash

    - name: Sync with S3
      run: aws s3 sync --delete ./${{ inputs.working-directory }} s3://${{ inputs.s3-bucket }}/${{ inputs.working-directory }}

    - name: Send SSM command - sync S3
      id: ssm-sync
      run: |
        COMMAND_ID=$(aws ssm send-command --instance-ids "${{ inputs.aws-instance-id }}" --document-name "AWS-RunShellScript" --parameters commands=["sudo -u ${{ inputs.username }} aws s3 sync --delete s3://${{ inputs.s3-bucket }}/${{ inputs.working-directory }} ${{ inputs.server-base-path }}/${{ inputs.working-directory }}"] --query 'Command.CommandId' --output text)
        echo "COMMAND_ID=$COMMAND_ID" >> $GITHUB_ENV
        bash ./wait-for-ssm-command.sh $COMMAND_ID
      shell: bash

    - name: Send SSM command - pnpm install
      id: ssm-pnpm-install
      run: |
        COMMAND_ID=$(aws ssm send-command --instance-ids "${{ inputs.aws-instance-id }}" --document-name "AWS-RunShellScript" --parameters commands=["cd ${{ inputs.server-base-path }}/${{ inputs.working-directory }}; pnpm install"] --query 'Command.CommandId' --output text)
        echo "COMMAND_ID=$COMMAND_ID" >> $GITHUB_ENV
        bash ./wait-for-ssm-command.sh $COMMAND_ID
      shell: bash
